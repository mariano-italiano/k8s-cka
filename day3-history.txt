vi replicaset.yaml
kubectl apply -f replicaset.yaml
kubectl get pod
kubectl get rs
kubectl get deployments.apps 
kubectl scale rs replicate-my-app --reaplicas=10
kubectl scale rs replicate-my-app --replicas=10
kubectl get rs
kubectl get pod
kubectl scale rs replicate-my-app --replicas=1
kubectl get pod
kubectl get rs
kubectl get pod, deplo, rs
kubectl get pod,deploy,rs
vi replicaset.yaml 
cp -rp replicaset.yaml deployment.yaml
vi deployment.yaml
kubectl apply -f deployment.yaml
vi deployment.yaml
kubectl apply -f deployment.yaml
vi deployment.yaml
kubectl apply -f deployment.yaml
vi deployment.yaml
kubectl apply -f deployment.yaml
kubectl get deploy,pods,rs
kubectl describe deployments.apps my-deployment 
kubectl get deployments.apps my-deployment -o yaml | grep -A4 strategy
kubectl get pods
kubectl delete all -A
kubectl delete --all all
kubectl get pods -A
kubectl delete ns web
kubectl delete --all all -n enigma 
kubectl delete ns enigma
kubectl get pods -A
kubectl apply -f deployment.yaml 
kubectl get pods,deplo
kubectl get pods,deploy
kubectl describe deployments.apps my-deployment 
kubectl edit deployments.apps my-deployment 
kubectl scale deployment my-deployment --replicas 8
kubectl edit deployments.apps my-deployment 
kubectl get pod 
kubectl set image deployment my-deployment nginx=nginx:1.14.2 --record
kubectl edit deployments.apps my-deployment 
kubectl set image deployment my-deployment myapp-container=nginx:1.14.2 --record
kubectl get pod 
kubectl describe deployments.apps my-deployment 
kubectl rollout status deployment my-deployment 
kubectl rollout history deployment my-deployment 
kubectl edit deployments.apps my-deployment 
kubectl rollout history deployment my-deployment 
kubectl rollout status deployment my-deployment 
kubectl rollout undo deployment my-deployment --to-revision 2
kubectl rollout status deployment my-deployment 
kubectl rollout history deployment my-deployment 
kubectl edit deployments.apps my-deployment 
kubectl describe deployments.apps my-deployment 
kubectl set image deployment my-deployment myapp-container=nginx:latest
kubectl rollout status deployment my-deployment 
kubectl describe deployments.apps my-deployment 
kubectl annotate deployments.apps my-deployment kubernetes.io/change-cause="updated to latest nginx image version, CHNO123, Kujawski Marcin, 24.04.2024"
kubectl describe deployments.apps my-deployment 
kubectl rollout status deployment my-deployment 
kubectl rollout history deployment my-deployment 
kubectl logs -l app=myapp2
kubectl edit  deployments.apps my-deployment 
kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml
watch -n1 kubectl get all -n ingress-nginx 
kubectl get all -n ingress-nginx 
kubectl patch svc ingress-nginx-controller -n ingress-nginx --type='json' -p='[{"op": "replace", "path": "/spec/type", "value": "LoadBalancer"}]'
kubectl get all -n ingress-nginx 
kubectl patch svc ingress-nginx-controller -n ingress-nginx --type='json' -p '{"spec":{"externalIPs":["192.168.1.100"]}}'
kubectl patch svc ingress-nginx-controller -n ingress-nginx -p '{"spec":{"externalIPs":["192.168.1.100"]}}'
kubectl get all -n ingress-nginx 
kubectl get pods
kubectl delete deployments.apps my-deployment 
kubectl create deploy web1 --image nginx --replicas=1 
kubectl create deploy web2 --image nginx --replicas=1 
kubectl get pods
kubectl expose deployment web1 --port 80 --name web1-svc
kubectl expose deployment web2 --port 80 --name web2-svc
kubectl get svc
kubectl get pods
kubectl exec -it web1-787d8ccbdc-zzzm5 -- bash
vi web1-index.html
vi web2-index.html
kubectl cp -n default web1-index.html web1-787d8ccbdc-zzzm5:/usr/share/nginx/html/index.html
kubectl exec -it web1-787d8ccbdc-zzzm5 -- bash
kubectl cp -n default web2-index.html web2-5986675d6-scsq6:/usr/share/nginx/html/index.html
kubectl get pods -o wide
curl http://10.0.2.87
kubectl get svc,ep
kubectl get ingressclasses.networking.k8s.io 
vi ingress.yaml
kubectl apply -f ingress.yaml
kubectl cp -n default web2-index.html web2-5986675d6-scsq6:/usr/share/nginx/html/index.html
kubectl get svc,ep,pod
kubectl get svc,ep,pod -o wide
kubectl edit ingress web-ingress 
kubectl exec -it web1-787d8ccbdc-zzzm5 -- bash
kubectl edit ingress web-ingress 
kubectl edit svc web1-svc 
netstat -vtanupl
sudo apt install net-tools -y
netstat -vtanupl
netstat -vtanupl | grep LISTEN
iptables -L -v -n
sudo iptables -L -v -n
ip a s
kubectl edit ingress web-ingress 
vi volume-pod.yaml
kubectl apply -f volume-pod.yaml
kubectl get pod -o wide
kubectl exec -it volume-pod -- bash
cp volume-pod.yaml volume-pod2.yaml 
vi volume-pod2.yaml
kubectl apply -f volume-pod2.yaml
kubectl get pods
vi volume-pod2.yaml
kubectl replace --force -f volume-pod2.yaml
kubectl get pods
kubectl exec -it volume-pod2 -- bash
kubectl exec -it volume-pod2 -- sh
kubectl get pod -o wide
kubectl drain worker01
kubectl drain worker01 --ignore-daemonsets
kubectl drain worker01 --ignore-daemonsets --force
kubectl get pod -o wide
kubectl replace --force -f volume-pod2.yaml
kubectl get pod -o wide
kubectl exec -it volume-pod2 -- sh
vi test-pv.yaml
vi test-pvc.yaml
kubectl apply -f test-pv.yaml
kubectl get pv
kubectl apply -f test-pvc.yaml
kubectl get pv,pvc
vi test-volume-nginx.yaml
kubectl apply -f test-volume-nginx.yaml
kubectl get pods -o wide
kubectl delete deployments.apps test-volume-nginx 
kubectl get pv,pvc
kubectl delete pvc test-pvc 
kubectl get pv,pvc
kubectl apply -f test-pvc.yaml 
kubectl get pv,pvc
kubectl get pv test-pv -o json 
kubectl patch pv test-pv -p '{"spec":{"claimRef": null }}'
kubectl get pv test-pv -o json 
kubectl get pv,pvc
vi localdisk-sc.yaml
kubectl apply -f localdisk-sc.yaml
kubectl get sc
kubectl describe sc localdisk 
vi host-pv.yaml
kubectl apply -f host-pv.yaml
vi host-pv.yaml
kubectl apply -f host-pv.yaml
kubectl get pv
vi host-pvc.yaml
kubectl apply -f host-pvc.yaml
kubectl get pv
vi pv-pod.yaml
kubectl apply -f pv-pod.yaml
kubectl get pod
kubectl get pod -o wide
kubectl get pv,pvc
kubectl describe pvc host-pvc 
kubectl edit pvc host-pvc 
kubectl exec -it pv-pod -- sh
kubectl edit pvc host-pvc 
kubectl events
kubectl logs pv-pod 
kubectl get pv,pvc
kubectl edit pvc test-pvc 
sudo apt install nfs-common nfs-kernel-server cifs-utils -y
sudo mkdir /var/nfs/share
sudo mkdir /var/nfs/share -p
sudo chown nobody:nobody /var/nfs/share
sudo chown nobody:nogroup /var/nfs/share
sudo chown -R  nobody:nogroup /var/nfs/share
sudo vi /etc/exports 
sudo exportfs -rav
sudo vi /etc/exports 
sudo exportfs -rav
sudo systemctl restart nfs-kernel-server
sudo systemctl status nfs-kernel-server
cp -rp localdisk-sc.yaml nfs-sc.yaml
vi nfs-sc.yaml
vi nfs-pv.yaml
vi nfs-pvc.yaml
kubectl apply -f nfs-sc.yaml
kubectl apply -f nfs-pv.yaml 
vi nfs-pv.yaml
kubectl apply -f nfs-pv.yaml 
vi nfs-pvc.yaml
vi nfs-pv.yaml
kubectl apply -f nfs-pv.yaml 
kubectl apply -f nfs-pvc.yaml 
kubectl get sc,pv,pvc
vi /var/nfs/share/index.html
sudo vi /var/nfs/share/index.html
kubectl get deploy
kubectl get pod
vi pv-pod.yaml 
cp -rp pv-pod.yaml sc-nfs-pod.yaml
vi sc-nfs-pod.yaml
kubectl apply -f sc-nfs-pod.yaml
vi sc-nfs-pod.yaml
kubectl apply -f sc-nfs-pod.yaml
kubectl get pod -o wide
kubectl events
kubectl logs nfs-pod 
kubectl get pod -o wide
kubectl events
vi /etc/exports 
sudo vi /etc/exports 
sudo exportfs -rav
kubectl get pod -o wide
kubectl delete pod nfs-pod 
vi sc-nfs-pod.yaml 
kubectl get pvc
kubectl delete pvc nfs-pvc 
kubectl delete pv delete nfs-pv 
kubectl get pv,pvc
vi nfs-pv
vi nfs-pv.yaml 
vi nfs-pvc.yaml 
kubectl apply -f nfs-pv.yaml -f nfs-pvc.yaml 
kubectl get pv,pvc
kubectl apply -f sc-nfs-pod.yaml 
kubectl get pods
kubectl get pods -o wide
curl http://10.0.2.130
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
kubectl delete cm my-configmap 
kubectl apply -f my-configmap.yaml
kubectl delete cm my-configmap 
kubectl apply -f my-configmap.yaml
vi my-configmap.yaml
kubectl apply -f my-configmap.yaml
kubectl get cm
kubectl describe cm
vi my-configmap.yaml
kubectl describe cm
kubectl delete cm my-configmap 
vi my-configmap.yaml
kubectl apply  -f my-configmap.yaml
vi my-configmap.yaml
kubectl apply  -f my-configmap.yaml
kubectl describe cm
vi configmap.txt
kubectl create configmap fromfile --from-file configmap.txt 
kubectl describe cm fromfile 
mkdir config-maps
sudo cat /etc/ssh/sshd_config | grep -v "#" | tr -s '\n'
sudo cat /etc/ssh/sshd_config | grep -v "#" | tr -s '\n' > config-maps/sshd_config
sudo cat /etc/passwd > config-maps/passwd
kubectl create configmap dir-cm --from-file config-maps/
kubectl describe cm dir-cm 
vi configmap-pod.yaml
kubectl apply -f configmap-pod.yaml
kubectl get pods
kubectl logs configmap-pod 
cp -rp configmap-pod.yaml configmap-volume-pod.yaml
vi configmap-volume-pod.yaml
kubectl apply -f configmap-volume-pod.yaml
vi configmap-volume-pod.yaml
kubectl apply -f configmap-volume-pod.yaml
vi configmap-volume-pod.yaml
kubectl apply -f configmap-volume-pod.yaml
vi configmap-volume-pod.yaml
kubectl apply -f configmap-volume-pod.yaml
vi configmap-volume-pod.yaml
kubectl apply -f configmap-volume-pod.yaml
kubectl get pod 
kubectl exec -it configmap-volume-pod -- ls -la /etc/config
kubectl exec -it configmap-volume-pod -- cat /etc/config/sshd_config
kubectl edit cm dir-cm 
kubectl exec -it configmap-volume-pod -- cat /etc/config/sshd_config
kubectl edit cm my-configmap 
kubectl exec -it configmap-pod -- env
kubectl exec -it configmap-pod -- env | grep TEMP_VALUE
kubectl create secret generic my-secret --from-literal user=root --from-literal password=Secur3!
kubectl get secrets 
kubectl describe secrets my-secret 
kubectl edit secrets my-secret 
kubectl get secret my-secret 
kubectl get secret my-secret  -o jsonpath='{.data.password}' | base64 -d && echo
kubectl get secret my-secret  -o jsonpath='{.data.user}' | base64 -d 
kubectl get secret my-secret  -o jsonpath='{.data.user}' | base64 -d && echo
echo "securePassword123!" | base64
vi my-secret2.yaml
kubectl apply -f my-secret2.yaml
kubectl get secret my-secret2  -o jsonpath='{.data.pass}' | base64 -d && echo
echo "mariadbSecurePassword" > mariadb-root
cat mariadb-root
kubectl create secret generic mariadb-pass --from-file mariadb-root 
kubectl describe secret mariadb-pass 
kubectl get secret mariadb-pass -o jsonpath='{.data.mariadb-root}' | base64 -d && echo
vi secret-pod.yaml
kubectl get secrets my-secret
kubectl describe secrets my-secret
vi secret-pod.yaml
kubectl apply -f secret-pod.yaml
vi secret-pod.yaml
kubectl logs secret-pod 
kubectl exec -it secret-pod -- cat /etc/config/secret
kubectl exec -it secret-pod -- ls /etc/config/secret
kubectl exec -it secret-pod -- cat /etc/config/secret/pass
htpasswd
sudo apt install apache2-utils -y
htpasswd -c .htpasswd kubernetes
cat .htpasswd 
kubectl create secret generic nginx-htpasswd --from-file .htpasswd 
rm .htpasswd 
vi nginx-config.yaml
kubectl create -f nginx-config.yaml
kubectl describe cm nginx-config 
vi nginx-pod.y
vi nginx-pod.yaml
kubectl apply -f nginx-pod.yaml
kubectl get pods -o wide
curl http://10.0.2.104
git status
ls -la
history 
history | awk '$1 > 480' | cut -c 8- >> ../day3-history.txt
